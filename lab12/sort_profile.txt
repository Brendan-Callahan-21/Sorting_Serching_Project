*** USING BUBBLE SORT ***

Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 39.18     14.54    14.54 2503064942     0.00     0.00  swap
 30.84     25.98    11.44        1    11.44    31.86  bubbleSort
 15.85     31.86     5.88 704982704     0.00     0.00  compareInts
  8.95     35.17     3.32                             _init
  5.15     37.09     1.91                             print_int_array
  0.04     37.10     0.01                             selectionSort


                        Call graph


granularity: each sample hit covers 4 byte(s) for 0.03% of 37.10 seconds

index % time    self  children    called     name
               11.44   20.41       1/1           main [2]
[1]     85.9   11.44   20.41       1         bubbleSort [1]
               14.54    0.00 2503064942/2503064942     swap [3]
                5.88    0.00 704982704/704982704     compareInts [4]
-----------------------------------------------
                                                 <spontaneous>
[2]     85.9    0.00   31.86                 main [2]
               11.44   20.41       1/1           bubbleSort [1]
-----------------------------------------------
               14.54    0.00 2503064942/2503064942     bubbleSort [1]
[3]     39.2   14.54    0.00 2503064942         swap [3]
-----------------------------------------------
                5.88    0.00 704982704/704982704     bubbleSort [1]
[4]     15.8    5.88    0.00 704982704         compareInts [4]
-----------------------------------------------
                                                 <spontaneous>
[5]      8.9    3.32    0.00                 _init [5]
-----------------------------------------------
                                                 <spontaneous>
[6]      5.1    1.91    0.00                 print_int_array [6]
-----------------------------------------------
                                                 <spontaneous>
[7]      0.0    0.01    0.00                 selectionSort [7]
-----------------------------------------------


Index by function name

   [5] _init                   [4] compareInts             [7] selectionSort
   [1] bubbleSort              [6] print_int_array         [3] swap


*** USING QUICK SORT ***

Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
100.00      0.01     0.01    90009     0.00     0.00  quickSortPartition
  0.00      0.01     0.00  2253193     0.00     0.00  compareInts
  0.00      0.01     0.00  1447939     0.00     0.00  swap
  0.00      0.01     0.00        1     0.00    10.00  quickSort
  0.00      0.01     0.00        1     0.00    10.00  quickSortRecursive


                        Call graph


granularity: each sample hit covers 4 byte(s) for 100.00% of 0.01 seconds

index % time    self  children    called     name
                0.01    0.00   90009/90009       quickSortRecursive [3]
[1]    100.0    0.01    0.00   90009         quickSortPartition [1]
                0.00    0.00 2253193/2253193     compareInts [5]
                0.00    0.00 1447939/1447939     swap [6]
-----------------------------------------------
                0.00    0.01       1/1           main [4]
[2]    100.0    0.00    0.01       1         quickSort [2]
                0.00    0.01       1/1           quickSortRecursive [3]
-----------------------------------------------
                              180018             quickSortRecursive [3]
                0.00    0.01       1/1           quickSort [2]
[3]    100.0    0.00    0.01       1+180018  quickSortRecursive [3]
                0.01    0.00   90009/90009       quickSortPartition [1]
                              180018             quickSortRecursive [3]
-----------------------------------------------
                                                 <spontaneous>
[4]    100.0    0.00    0.01                 main [4]
                0.00    0.01       1/1           quickSort [2]
-----------------------------------------------
                0.00    0.00 2253193/2253193     quickSortPartition [1]
[5]      0.0    0.00    0.00 2253193         compareInts [5]
-----------------------------------------------
                0.00    0.00 1447939/1447939     quickSortPartition [1]
[6]      0.0    0.00    0.00 1447939         swap [6]
-----------------------------------------------


Index by function name

   [5] compareInts             [1] quickSortPartition      [6] swap
   [2] quickSort               [3] quickSortRecursive     [4] quickSortRecursive